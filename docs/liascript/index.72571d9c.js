/*! coi-serviceworker v0.1.7 - Guido Zuidhof and contributors, licensed under MIT */ /*! mini-coi - Andrea Giammarchi and contributors, licensed under MIT */(({document:e,navigator:{serviceWorker:t}})=>{if(e){const{currentScript:s}=e;t.register(s.src,{scope:s.getAttribute("scope")||"."}).then((e=>{e.addEventListener("updatefound",(()=>location.reload())),e.active&&!t.controller&&location.reload()}))}else addEventListener("install",(()=>skipWaiting())),addEventListener("activate",(e=>e.waitUntil(clients.claim()))),addEventListener("fetch",(e=>{const{request:t}=e;"only-if-cached"===t.cache&&"same-origin"!==t.mode||e.respondWith(fetch(t).then((e=>{const{body:t,status:s,statusText:r}=e;if(!s||s>399)return e;const i=new Headers(e.headers);return i.set("Cross-Origin-Opener-Policy","same-origin"),i.set("Cross-Origin-Embedder-Policy","require-corp"),i.set("Cross-Origin-Resource-Policy","cross-origin"),new Response(t,{status:s,statusText:r,headers:i})})))}))})(self);